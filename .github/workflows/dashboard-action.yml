# Copyright (c) 2021 De Staat der Nederlanden, Ministerie van   Volksgezondheid, Welzijn en Sport.
# Licensed under the EUROPEAN UNION PUBLIC LICENCE v. 1.2 - see https://github.com/minvws/nl-covid19-data-backend-processing for more information.

# This is a basic workflow to help you get started with Actions
name: "dashboard"

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  push:
    paths: 
      - "src/**/*.ipynb"
    branches:
      - "topic/*" # USED FOR TESTING!
  pull_request:
    branches:
      - master

env:
  GITHUB_WORKFLOWS: "./.github/workflows"

jobs:

  build:
    name: "build"
    runs-on: ubuntu-latest
    steps:
      - name: "1 - Checkout"
        uses: actions/checkout@v2
        
      - name: "2 - Select Modified Scripts"
        id: select_modified_scripts
        uses: jitterbit/get-changed-files@v1
      
      - name: "3 - Analyse Modified Scripts"
        id: analyse_modified_scripts
        run: |
          $scripts = "${{ steps.select_modified_scripts.outputs.added_modified }}"
          $scripts += " ${{ steps.select_modified_scripts.outputs.renamed }}" 

          Write-Host "========== modified files =========="
          Write-Host $scripts

          echo "::set-output name=modified_scripts::${scripts}"          
        shell: pwsh

      - name: "4 - Build MSSQL Artifacts"
        run: |
          & "${{ env.GITHUB_WORKFLOWS }}/scripts/build-script.ps1" `
            -SourceDirectory "${{ github.workspace }}" `
            -ModifiedFiles "${{ steps.analyse_modified_scripts.outputs.modified_scripts }}"
        shell: pwsh

      - name: "5 - Copy Files: MSSQL Scripts"
        uses: actions/upload-artifact@v2.3.1
        with:
          name: mssql-artifacts
          path: "${{ github.workspace }}/*.sql"
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
          retention-days: 28

      - name: "6 - Copy Files: Powershell Scripts"
        uses: actions/upload-artifact@v2.3.1
        with:
          name: pwsh-artifacts
          path: "${{ env.GITHUB_WORKFLOWS }}/scripts/"
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
          retention-days: 28

      - name: "7 - Post Build"
        if: always()
        run: |
          $containerName = "a1049e34-6129-11ec-90d6-0242ac120003"
          Write-Host "Removing container(s)....."
          docker container stop $containerName
          docker container rm $containerName
        shell: pwsh

  development:
    name: development
    environment: development
    runs-on: self-hosted
    needs: build
    steps:
    - name: "1 - Download Artifacts: MSSQL Scripts"
      uses: actions/download-artifact@v2
      with:
        name: mssql-artifacts
        path: ${{ github.workspace }}/src
  
    - name: "2 - Download Artifacts: Powershell Scripts"
      uses: actions/download-artifact@v2
      with:
        name: pwsh-artifacts
        path: ${{ github.workspace }}/scripts
  
    - name: 3 - Display Structures
      run: ls -R
  
    - name: 4 - Replace Tokens
      id: check_modified_files
      run: |
        $scripts = Get-ChildItem -Path "${{ github.workspace }}/src" -Filter "*.sql"          
        Write-Host "Replace tokens:"          
        foreach ($script in $scripts | Sort-Object -Property Fullname) {
          Write-Host "`t$($script)" -ForegroundColor Blue         
          $content = (Get-Content $script) -replace '#{ Environment }#', '${{ inputs.environment }}' 
          $content | Out-File $script
        }
      shell: pwsh
  
    - name: 5 - Migrate MSSQL Artifacts
      run: |
        & "${{ github.workspace }}/scripts/release-script.ps1" `
          -Server "${{ env.MSSQL_SERVER }}" `
          -Database "${{ env.MSSQL_DATABASE }}" `
          -SourceDirectory "${{ github.workspace }}/src" `
          -Username "${{ secrets.LOGIN_USERNAME }}" `
          -Password "${{ secrets.LOGIN_PASSWORD }}"
      shell: pwsh
  
    - name: 6 - Post Deployment
      if: always()
      run: Remove-Item -Recurse -Force "${{ github.workspace }}/src"
      shell: pwsh

  acceptance:
    name: acceptance
    environment: acceptance
    runs-on: self-hosted
    needs: development
    steps:
    - name: "1 - Download Artifacts: MSSQL Scripts"
      uses: actions/download-artifact@v2
      with:
        name: mssql-artifacts
        path: ${{ github.workspace }}/src
  
    - name: "2 - Download Artifacts: Powershell Scripts"
      uses: actions/download-artifact@v2
      with:
        name: pwsh-artifacts
        path: ${{ github.workspace }}/scripts
  
    - name: 3 - Display Structures
      run: ls -R
  
    - name: 4 - Replace Tokens
      id: check_modified_files
      run: |
        $scripts = Get-ChildItem -Path "${{ github.workspace }}/src" -Filter "*.sql"          
        Write-Host "Replace tokens:"          
        foreach ($script in $scripts | Sort-Object -Property Fullname) {
          Write-Host "`t$($script)" -ForegroundColor Blue         
          $content = (Get-Content $script) -replace '#{ Environment }#', '${{ inputs.environment }}' 
          $content | Out-File $script
        }
      shell: pwsh
  
    - name: 5 - Migrate MSSQL Artifacts
      run: |
        & "${{ env.GITHUB_WORKSPACE }}/scripts/release-script.ps1" `
          -Server "${{ env.MSSQL_SERVER }}" `
          -Database "${{ env.MSSQL_DATABASE }}" `
          -SourceDirectory "${{ github.workspace }}/src" `
          -Username "${{ secrets.LOGIN_USERNAME }}" `
          -Password "${{ secrets.LOGIN_PASSWORD }}"
      shell: pwsh
  
    - name: 6 - Post Deployment
      if: always()
      run: Remove-Item -Recurse -Force "${{ github.workspace }}/src"
      shell: pwsh

  production:
    name: production
    environment: production
    runs-on: self-hosted
    needs: acceptance
    steps:
    - name: "1 - Download Artifacts: MSSQL Scripts"
      uses: actions/download-artifact@v2
      with:
        name: mssql-artifacts
        path: ${{ github.workspace }}/src
  
    - name: "2 - Download Artifacts: Powershell Scripts"
      uses: actions/download-artifact@v2
      with:
        name: pwsh-artifacts
        path: ${{ github.workspace }}/scripts
  
    - name: 3 - Display Structures
      run: ls -R
  
    - name: 4 - Replace Tokens
      id: check_modified_files
      run: |
        $scripts = Get-ChildItem -Path "${{ github.workspace }}/src" -Filter "*.sql"          
        Write-Host "Replace tokens:"          
        foreach ($script in $scripts | Sort-Object -Property Fullname) {
          Write-Host "`t$($script)" -ForegroundColor Blue         
          $content = (Get-Content $script) -replace '#{ Environment }#', '${{ inputs.environment }}' 
          $content | Out-File $script
        }
      shell: pwsh
  
    - name: 5 - Migrate MSSQL Artifacts
      run: |
        & "${{ env.GITHUB_WORKSPACE }}/scripts/release-script.ps1" `
          -Server "${{ env.MSSQL_SERVER }}" `
          -Database "${{ env.MSSQL_DATABASE }}" `
          -SourceDirectory "${{ github.workspace }}/src" `
          -Username "${{ secrets.LOGIN_USERNAME }}" `
          -Password "${{ secrets.LOGIN_PASSWORD }}"
      shell: pwsh
  
    - name: 6 - Post Deployment
      if: always()
      run: Remove-Item -Recurse -Force "${{ github.workspace }}/src"
      shell: pwsh
