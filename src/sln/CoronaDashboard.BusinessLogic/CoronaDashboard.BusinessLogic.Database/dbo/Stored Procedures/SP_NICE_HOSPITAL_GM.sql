-- Copyright (c) 2020 De Staat der Nederlanden, Ministerie van Volksgezondheid, Welzijn en Sport.
 -- Licensed under the EUROPEAN UNION PUBLIC LICENCE v. 1.2 - see https://github.com/minvws/nl-contact-tracing-app-coordination for more information.
 
 CREATE   PROCEDURE [dbo].[SP_NICE_HOSPITAL_GM]
 AS
 BEGIN
 WITH BASE_CTE AS (
 	SELECT
 		DATE_OF_STATISTICS
 	,	MUNICIPALITY_CODE
 	,	SUM(HOSPITALIZED) AS HOSPITALIZED
 	,	SUM(REPORTED) AS REPORTED
 	FROM VWSINTER.NICE_HOSPITAL
 	WHERE MUNICIPALITY_CODE!='NA'
 	AND DATE_LAST_INSERTED=(SELECT MAX(DATE_LAST_INSERTED) FROM VWSINTER.NICE_HOSPITAL)
 	GROUP BY MUNICIPALITY_CODE, DATE_OF_STATISTICS
 )
 
 ,SECOND_CTE AS (    
 	SELECT
 		DATE_OF_STATISTICS
 	,	MUNICIPALITY_CODE
 	,	GMNAAM
 	,	HOSPITALIZED
 	,	REPORTED
 	,	AVG(CAST([HOSPITALIZED] AS FLOAT)) OVER (PARTITION BY MUNICIPALITY_CODE ORDER BY DATE_OF_STATISTICS ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as HOSPITALIZED_3D_AVG
 	,	AVG(CAST([REPORTED] AS FLOAT)) OVER (PARTITION BY MUNICIPALITY_CODE ORDER BY DATE_OF_STATISTICS ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as REPORTED_3D_AVG
 
 	-- Reported per 1000000 over the last seven days including today. Do only report when there are seven days that can be totaled.
 	,   CAST(ROUND(SUM(REPORTED) OVER 
 			(PARTITION BY MUNICIPALITY_CODE ORDER BY [DATE_OF_STATISTICS] ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)
 			/(T1.INHABITANTS/1000000.0),0) AS INT) AS REPORTED_PER_MIL_LAST_WEEK
 	,   HOSPITALIZED/(T1.[INHABITANTS]/100000.0) AS HOSPITALIZED_PER_100000
 	,   LAG ([DATE_OF_STATISTICS] ,6) OVER (PARTITION BY MUNICIPALITY_CODE ORDER BY [DATE_OF_STATISTICS] ASC ) WEEK_START
 	,   LAG ([DATE_OF_STATISTICS] ,7) OVER (PARTITION BY MUNICIPALITY_CODE ORDER BY [DATE_OF_STATISTICS] ASC ) WEEK_START_LAG
 	-- 7d average
 	,	AVG(CAST([HOSPITALIZED] AS FLOAT)) OVER (PARTITION BY MUNICIPALITY_CODE ORDER BY DATE_OF_STATISTICS ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as HOSPITALIZED_7D_AVG
 	,	AVG(CAST([HOSPITALIZED] AS FLOAT)) OVER (PARTITION BY MUNICIPALITY_CODE ORDER BY DATE_OF_STATISTICS ASC ROWS BETWEEN 7 PRECEDING AND 1 PRECEDING) as HOSPITALIZED_7D_AVG_LAG
 	,	AVG(CAST([REPORTED] AS FLOAT)) OVER (PARTITION BY MUNICIPALITY_CODE ORDER BY DATE_OF_STATISTICS ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as REPORTED_7D_AVG
 	,	AVG(CAST([REPORTED] AS FLOAT)) OVER (PARTITION BY MUNICIPALITY_CODE ORDER BY DATE_OF_STATISTICS ASC ROWS BETWEEN 7 PRECEDING AND 1 PRECEDING) as REPORTED_7D_AVG_LAG
	-- 7 day total
 	,   SUM([HOSPITALIZED]) OVER (PARTITION BY MUNICIPALITY_CODE ORDER BY DATE_OF_STATISTICS ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as HOSPITALIZED_7D
	,  (SUM([HOSPITALIZED]) OVER (PARTITION BY MUNICIPALITY_CODE ORDER BY DATE_OF_STATISTICS ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW))/(T1.[INHABITANTS]/100000.0) as HOSPITALIZED_7D_PER_100000
 	FROM BASE_CTE
 	LEFT JOIN (
 		SELECT GMCODE, GMNAAM FROM [VWSSTATIC].[SAFETY_REGIONS_PER_MUNICIPAL]
 		WHERE DATE_LAST_INSERTED=(SELECT MAX(DATE_LAST_INSERTED) FROM [VWSSTATIC].[SAFETY_REGIONS_PER_MUNICIPAL])) AS T
 	ON MUNICIPALITY_CODE=T.GMCODE
 	LEFT JOIN(
 	    SELECT GMCODE, INHABITANTS
 	    FROM [VWSSTATIC].[INHABITANTS_PER_MUNICIPALITY]
 	    WHERE DATE_LAST_INSERTED = (SELECT MAX(DATE_LAST_INSERTED) FROM [VWSSTATIC].[INHABITANTS_PER_MUNICIPALITY])
 	) AS T1 ON MUNICIPALITY_CODE = T1.GMCODE 
 )
 
 ,RANK_TABLE AS (
     SELECT
             DATE_OF_STATISTICS
             ,MUNICIPALITY_CODE
             ,GMNAAM
            ,HOSPITALIZED
            ,REPORTED
            ,HOSPITALIZED_3D_AVG
            ,REPORTED_3D_AVG
            ,IIF(WEEK_START IS NULL, NULL, REPORTED_PER_MIL_LAST_WEEK) AS REPORTED_PER_MIL_LAST_WEEK
 		   ,HOSPITALIZED_PER_100000
            ,WEEK_START
            ,IIF(WEEK_START IS NULL, NULL, ROUND(HOSPITALIZED_7D_AVG,1)) AS HOSPITALIZED_7D_AVG
            ,IIF(WEEK_START IS NULL, NULL, ROUND(REPORTED_7D_AVG,1)) AS REPORTED_7D_AVG
            ,WEEK_START_LAG
            ,IIF(WEEK_START_LAG IS NULL, NULL, ROUND(HOSPITALIZED_7D_AVG_LAG,1)) AS HOSPITALIZED_7D_AVG_LAG
            ,IIF(WEEK_START_LAG IS NULL, NULL, ROUND(REPORTED_7D_AVG_LAG,1)) AS REPORTED_7D_AVG_LAG
            ,ROW_NUMBER() OVER (PARTITION BY MUNICIPALITY_CODE ORDER BY DATE_OF_STATISTICS DESC) AS RANK_DATE
			,HOSPITALIZED_7D
			,HOSPITALIZED_7D_PER_100000
     FROM SECOND_CTE
 )
 
 INSERT INTO VWSDEST.NICE_HOSPITAL_GM(
 	DATE_OF_STATISTICS
 ,	GM_CODE
 ,	GM_NAME
 ,	HOSPITALIZED
 ,	REPORTED
 ,	HOSPITALIZED_3D_AVG
 ,	REPORTED_3D_AVG
 ,	REPORTED_PER_MIL_LAST_WEEK
 ,	HOSPITALIZED_PER_100000
 ,	WEEK_START
 ,   HOSPITALIZED_7D_AVG
 ,   REPORTED_7D_AVG
 ,   WEEK_START_LAG
 ,   HOSPITALIZED_7D_AVG_LAG
 ,   REPORTED_7D_AVG_LAG
 ,   HOSPITALIZED_7D_AVG_CUTOFF
 ,   HOSPITALIZED_7D
 ,   HOSPITALIZED_7D_PER_100000
     )
 
 SELECT
         DATE_OF_STATISTICS
        ,MUNICIPALITY_CODE
        ,GMNAAM
        ,HOSPITALIZED
        ,REPORTED
        ,HOSPITALIZED_3D_AVG
        ,REPORTED_3D_AVG
        ,REPORTED_PER_MIL_LAST_WEEK
 	   ,HOSPITALIZED_PER_100000
        ,WEEK_START
        ,HOSPITALIZED_7D_AVG
        ,REPORTED_7D_AVG
        ,WEEK_START_LAG
        ,HOSPITALIZED_7D_AVG_LAG
        ,REPORTED_7D_AVG_LAG
        ,IIF(RANK_DATE>4,HOSPITALIZED_7D_AVG,NULL) AS HOSPITALIZED_7D_AVG_CUTOFF
		,HOSPITALIZED_7D
        ,HOSPITALIZED_7D_PER_100000
 FROM RANK_TABLE
 END