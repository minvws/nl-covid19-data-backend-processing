-- Copyright (c) 2020 De Staat der Nederlanden, Ministerie van Volksgezondheid, Welzijn en Sport.
 -- Licensed under the EUROPEAN UNION PUBLIC LICENCE v. 1.2 - see https://github.com/minvws/nl-contact-tracing-app-coordination for more information.
 
 CREATE   PROCEDURE [dbo].[SP_NICE_HOSPITAL_NL]
 AS
 BEGIN
 WITH BASE_CTE AS (
     SELECT
     	DATE_OF_STATISTICS
     ,	SUM(HOSPITALIZED) AS HOSPITALIZED
     ,	SUM(REPORTED) AS REPORTED
     FROM VWSINTER.NICE_HOSPITAL
     WHERE DATE_LAST_INSERTED=(SELECT MAX(DATE_LAST_INSERTED) FROM VWSINTER.NICE_HOSPITAL)
     GROUP BY DATE_OF_STATISTICS
 )
 
 ,SECOND_CTE AS (
     SELECT
     	DATE_OF_STATISTICS
     ,	HOSPITALIZED
     ,	REPORTED
     ,	AVG(CAST([HOSPITALIZED] AS FLOAT)) OVER (ORDER BY DATE_OF_STATISTICS ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as HOSPITALIZED_3D_AVG
     ,	AVG(CAST([REPORTED] AS FLOAT)) OVER (ORDER BY DATE_OF_STATISTICS ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as REPORTED_3D_AVG
 
 
     -- Reported per 1000000 over the last seven days including today. Do only report when there are seven days that can be totaled.
     ,   CAST(ROUND(SUM(REPORTED) OVER (ORDER BY [DATE_OF_STATISTICS] ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)
             /(T1.INHABITANTS/1000000.0),0) AS INT) AS REPORTED_PER_MIL_LAST_WEEK
     ,   LAG ([DATE_OF_STATISTICS] ,6) OVER (ORDER BY [DATE_OF_STATISTICS] ASC) WEEK_START
     ,   LAG ([DATE_OF_STATISTICS] ,7) OVER (ORDER BY [DATE_OF_STATISTICS] ASC) WEEK_START_LAG    
     
     -- 7d average
     ,	AVG(CAST([HOSPITALIZED] AS FLOAT)) OVER (ORDER BY DATE_OF_STATISTICS ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as HOSPITALIZED_7D_AVG
     ,	AVG(CAST([HOSPITALIZED] AS FLOAT)) OVER (ORDER BY DATE_OF_STATISTICS ASC ROWS BETWEEN 7 PRECEDING AND 1 PRECEDING) as HOSPITALIZED_7D_AVG_LAG
     ,	AVG(CAST([REPORTED] AS FLOAT)) OVER (ORDER BY DATE_OF_STATISTICS ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as REPORTED_7D_AVG
     ,	AVG(CAST([REPORTED] AS FLOAT)) OVER (ORDER BY DATE_OF_STATISTICS ASC ROWS BETWEEN 7 PRECEDING AND 1 PRECEDING) as REPORTED_7D_AVG_LAG
 
     FROM BASE_CTE
     --Retrieve the number of inhabitants
     CROSS JOIN(
             SELECT INHABITANTS FROM [VWSSTATIC].[INHABITANTS_PER_SAFETY_REGION]
             WHERE DATE_LAST_INSERTED = (SELECT MAX(DATE_LAST_INSERTED) FROM [VWSSTATIC].[INHABITANTS_PER_SAFETY_REGION]) AND VGRNR = 'NL00'
 ) AS T1 
 )
 
 ,RANK_TABLE AS (
     SELECT
             DATE_OF_STATISTICS
            ,HOSPITALIZED
            ,REPORTED
            ,HOSPITALIZED_3D_AVG
            ,REPORTED_3D_AVG
            ,IIF(WEEK_START IS NULL, NULL, REPORTED_PER_MIL_LAST_WEEK) AS REPORTED_PER_MIL_LAST_WEEK
            ,WEEK_START
            ,IIF(WEEK_START IS NULL, NULL, ROUND(HOSPITALIZED_7D_AVG,1)) AS HOSPITALIZED_7D_AVG
            ,IIF(WEEK_START IS NULL, NULL, ROUND(REPORTED_7D_AVG,1)) AS REPORTED_7D_AVG
            ,WEEK_START_LAG
            ,IIF(WEEK_START_LAG IS NULL, NULL, ROUND(HOSPITALIZED_7D_AVG_LAG,1)) AS HOSPITALIZED_7D_AVG_LAG
            ,IIF(WEEK_START_LAG IS NULL, NULL, ROUND(REPORTED_7D_AVG_LAG,1)) AS REPORTED_7D_AVG_LAG
            ,ROW_NUMBER() OVER (ORDER BY DATE_OF_STATISTICS DESC) AS RANK_DATE
     FROM SECOND_CTE
 )
 
 INSERT INTO VWSDEST.NICE_HOSPITAL_NL(
     DATE_OF_STATISTICS
 ,	HOSPITALIZED
 ,	REPORTED
 ,	HOSPITALIZED_3D_AVG
 ,	REPORTED_3D_AVG
 ,   REPORTED_PER_MIL_LAST_WEEK
 ,   WEEK_START
 ,   HOSPITALIZED_7D_AVG
 ,   REPORTED_7D_AVG
 ,   WEEK_START_LAG
 ,   HOSPITALIZED_7D_AVG_LAG
 ,   REPORTED_7D_AVG_LAG
 ,   HOSPITALIZED_7D_AVG_CUTOFF
     )
     
 SELECT 
         DATE_OF_STATISTICS
        ,HOSPITALIZED
        ,REPORTED
        ,HOSPITALIZED_3D_AVG
        ,REPORTED_3D_AVG
        ,REPORTED_PER_MIL_LAST_WEEK
        ,WEEK_START
        ,HOSPITALIZED_7D_AVG
        ,REPORTED_7D_AVG
        ,WEEK_START_LAG
        ,HOSPITALIZED_7D_AVG_LAG
        ,REPORTED_7D_AVG_LAG
        ,IIF(RANK_DATE>4,HOSPITALIZED_7D_AVG,NULL) AS HOSPITALIZED_7D_AVG_CUTOFF
 FROM RANK_TABLE
 END