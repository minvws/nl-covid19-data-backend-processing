-- Copyright (c) 2020 De Staat der Nederlanden, Ministerie van   Volksgezondheid, Welzijn en Sport. 
-- Licensed under the EUROPEAN UNION PUBLIC LICENCE v. 1.2 - see https://github.com/minvws/nl-contact-tracing-app-coordinationfor more information.
CREATE   PROCEDURE [dbo].[SP_POSITIVE_TESTED_PEOPLE]
AS
BEGIN
--Move positively tested persons data from intermediate table to destination table. 

WITH AGEGROUP_POPULATION_DATERANGE AS (
SELECT 
	 DATUM_PEILING AS DATE_FROM
    -- 2100-01-01 is used as convention for the most recent versions as no end date is known yet.
    ,ISNULL(LEAD(DATUM_PEILING,1) OVER (ORDER BY [DATUM_PEILING] ASC),CAST('2100-01-01' AS DATE)) AS DATE_TO
	,POPULATIE AS [POPULATION]
FROM [VWSSTATIC].[CBS_POPULATION_NL]
WHERE DATE_LAST_INSERTED = (SELECT MAX(DATE_LAST_INSERTED) FROM VWSSTATIC.CBS_POPULATION_NL)--Determine ranges in which population numbers should be used
)
,
BASE_CTE AS (
    SELECT
        DATE_OF_PUBLICATION AS DATE_OF_REPORT,
        dbo.CONVERT_DATETIME_TO_UNIX(DATE_OF_PUBLICATION) AS DATE_OF_REPORT_UNIX,
        TOTAL_REPORTED AS INCREASE_ABSOLUTE,
        MUNICIPALITY_CODE,
        T1.[POPULATION]
    FROM VWSINTER.RIVM_COVID_19_NUMBER_MUNICIPALITY T0
    LEFT JOIN AGEGROUP_POPULATION_DATERANGE T1 
        ON  (T0.DATE_OF_PUBLICATION >= T1.DATE_FROM AND T0.DATE_OF_PUBLICATION < T1.DATE_TO)
    WHERE DATE_LAST_INSERTED = (SELECT MAX(DATE_LAST_INSERTED) from VWSINTER.RIVM_COVID_19_NUMBER_MUNICIPALITY)
        AND DATE_OF_PUBLICATION > '1900-01-01 00:00:00.000'
)
, TOTALS_CTE AS (
    SELECT 
         DATE_OF_REPORT
        ,DATE_OF_REPORT_UNIX
        ,SUM(CAST(INCREASE_ABSOLUTE AS FLOAT)) AS [INCREASE_ABSOLUTE]
        ,[POPULATION]    
		,LAG ([POPULATION] ,6)     OVER (ORDER BY DATE_OF_REPORT ASC)  AS [POPULATION_RANGE_START]
		,LAG ([POPULATION] ,7)     OVER (ORDER BY DATE_OF_REPORT ASC)  AS [POPULATION_RANGE_START_LAG]
		,LAG ([DATE_OF_REPORT] ,6) OVER (ORDER BY DATE_OF_REPORT ASC)  AS [DATE_RANGE_START]
		,LAG (DATE_OF_REPORT ,1)   OVER (ORDER BY DATE_OF_REPORT ASC)  AS [DATE_OF_REPORTS_LAG]
		,LAG (DATE_OF_REPORT ,7)   OVER (ORDER BY DATE_OF_REPORT ASC)  AS [DATE_RANGE_START_LAG]
    FROM BASE_CTE T1
	    GROUP BY DATE_OF_REPORT_UNIX, DATE_OF_REPORT, [POPULATION] 
		) 
,
CALCULATED_CTE AS (
        SELECT
            DATE_OF_REPORT,
			DATE_OF_REPORT_UNIX,
            INCREASE_ABSOLUTE AS INFECTED_DAILY_TOTAL,
			INCREASE_ABSOLUTE / (CAST([POPULATION] AS FLOAT)/100000.0) AS INFECTED_DAILY_INCREASE,
			[DATE_RANGE_START],
		    [DATE_OF_REPORTS_LAG],
		    [DATE_RANGE_START_LAG],

            --Additional data
            [POPULATION_RANGE_START],
            [POPULATION_RANGE_START_LAG],
            
            --Increase in positive tests per 100K 
			AVG([INCREASE_ABSOLUTE]) OVER (ORDER BY [DATE_OF_REPORT] ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)
                / (CAST(POPULATION_RANGE_START AS FLOAT)/100000.0) AS [7D_AVERAGE_INFECTED_DAILY_INCREASE],
            AVG([INCREASE_ABSOLUTE]) OVER (ORDER BY [DATE_OF_REPORT] ASC ROWS BETWEEN 7 PRECEDING AND 1 PRECEDING)
                / (CAST(POPULATION_RANGE_START_LAG AS FLOAT)/100000.0) AS [7D_AVERAGE_INFECTED_DAILY_INCREASE_LAG],

            -- --Average of total infections(absolute). Used to calculate difference
            AVG([INCREASE_ABSOLUTE]) OVER (ORDER BY [DATE_OF_REPORT] ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS [7D_AVERAGE_INFECTED_DAILY_INCREASE_ABSOLUTE]

        FROM TOTALS_CTE
)
	INSERT INTO VWSDEST.POSITIVE_TESTED_PEOPLE
        (
            DATE_OF_REPORT,
            DATE_OF_REPORT_UNIX,
            INFECTED_DAILY_TOTAL,
			INFECTED_DAILY_INCREASE,
			[DATE_RANGE_START],
		    [DATE_OF_REPORTS_LAG],
		    [DATE_RANGE_START_LAG],
	        [7D_AVERAGE_INFECTED_DAILY_INCREASE_TOTAL],
            [7D_AVERAGE_INFECTED_DAILY_INCREASE_LAG],
            [7D_AVERAGE_INFECTED_DAILY_INCREASE_ABSOLUTE]
        )

SELECT 
    DATE_OF_REPORT,
    DATE_OF_REPORT_UNIX,
    INFECTED_DAILY_TOTAL,
    INFECTED_DAILY_INCREASE,
    IIF(DATE_OF_REPORT < DATEADD(day, 6,CAST('2020-03-02' as datetime)), NULL, [DATE_RANGE_START]) AS [DATE_RANGE_START],
    [DATE_OF_REPORTS_LAG],
    IIF(DATE_OF_REPORT < DATEADD(day, 7,CAST('2020-03-02' as datetime)), NULL, [DATE_RANGE_START_LAG]) AS [DATE_RANGE_START_LAG],
    
    --Increase in positive tests per 100K 
    CASE WHEN DATE_OF_REPORT <  DATEADD(day, 6,'2020-03-02') THEN NULL
			ELSE ROUND([7D_AVERAGE_INFECTED_DAILY_INCREASE],1) 
        END AS [7D_AVERAGE_INFECTED_DAILY_INCREASE],


    CASE WHEN DATE_OF_REPORT <  DATEADD(day, 7,'2020-03-02') THEN NULL
			ELSE ROUND([7D_AVERAGE_INFECTED_DAILY_INCREASE_LAG],1) 
        END AS [7D_AVERAGE_INFECTED_DAILY_INCREASE_LAG],

    --Average of total infections(absolute). Used to calculate difference
    CASE WHEN DATE_OF_REPORT <  DATEADD(day, 6,'2020-03-02') THEN NULL
            ELSE ROUND([7D_AVERAGE_INFECTED_DAILY_INCREASE_ABSOLUTE],1) 
        END AS [7D_AVERAGE_INFECTED_DAILY_INCREASE_ABSOLUTE]

FROM CALCULATED_CTE

END;