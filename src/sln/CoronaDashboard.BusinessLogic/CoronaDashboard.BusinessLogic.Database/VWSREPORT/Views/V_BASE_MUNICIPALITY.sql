-- Copyright (c) 2020 De Staat der Nederlanden, Ministerie van   Volksgezondheid, Welzijn en Sport.
-- Licensed under the EUROPEAN UNION PUBLIC LICENCE v. 1.2 - see https://github.com/minvws/nl-contact-tracing-app-coordinationfor more information.

CREATE   VIEW [VWSREPORT].[V_BASE_MUNICIPALITY] AS
SELECT
DATE_OF_REPORT,
dbo.CONVERT_DATETIME_TO_UNIX(DATE_OF_REPORT) AS DATE_OF_REPORT_UNIX,
VRCODE,
GMCODE,
INHABITANTS,
DATE_LAST_INSERTED,

-- Positives
POSITIVES_DAILY_INCREASE as POSITIVES_DAILY_INCREASE,
POSITIVES_DAILY_INCREASE/(INHABITANTS/100000.0) as POSITIVES_DAILY_INCREASE_PER_100K,
SUM(POSITIVES_DAILY_INCREASE) OVER(PARTITION BY GMCODE ORDER BY DATE_OF_REPORT ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS POSITIVES_CUMMULATIVE,
AVG(CAST(POSITIVES_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY GMCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as POSITIVE_DAILY_3D_MovAvg,
AVG(Cast(POSITIVES_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY GMCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as POSITIVE_DAILY_3D_MovAvg_PER_100K,
SUM(Cast(POSITIVES_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY GMCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as POSITIVES_7D_SUM,
SUM(Cast(POSITIVES_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY GMCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as POSITIVES_7D_SUM_PER_100K,

-- Hospital
HOSPITAL_ADMISSION_DAILY_INCREASE as HOSPITAL_GGD_DAILY_INCREASE,
HOSPITAL_ADMISSION_DAILY_INCREASE/(INHABITANTS/100000.0) as HOSPITAL_GGD_DAILY_PER_100K,
HOSPITAL_ADMISSION_DAILY_INCREASE/(INHABITANTS/1000000.0) as HOSPITAL_GGD_DAILY_PER_1M,
SUM(HOSPITAL_ADMISSION_DAILY_INCREASE) OVER(PARTITION BY GMCODE ORDER BY DATE_OF_REPORT ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS HOSPITAL_GGD_CUMMULATIVE,
AVG(CAST(HOSPITAL_ADMISSION_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY GMCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as HOSPITAL_GGD_3D_MovAvg,
AVG(Cast(HOSPITAL_ADMISSION_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY GMCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as HOSPITAL_GGD_3D_MovAvg_PER_100K,
SUM(CAST(HOSPITAL_ADMISSION_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY GMCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as HOSPITAL_GGD_7D_SUM,
SUM(Cast(HOSPITAL_ADMISSION_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY GMCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as HOSPITAL_GGD_7D_SUM_PER_100K,
SUM(Cast(HOSPITAL_ADMISSION_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY GMCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/(INHABITANTS/1000000.0) as HOSPITAL_GGD_7D_SUM_PER_1M,

-- deceased
DECEASE_DAILY_INCREASE as DECEASE_DAILY_INCREASE,
DECEASE_DAILY_INCREASE/(INHABITANTS/100000.0) as DECEASED_DAILY_PER_100K,
SUM(DECEASE_DAILY_INCREASE) OVER(PARTITION BY GMCODE ORDER BY DATE_OF_REPORT ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS DECEASED_CUMMULATIVE,
AVG(CAST(DECEASE_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY GMCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as DECEASED_DAILY_3D_MovAvg,
AVG(Cast(DECEASE_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY GMCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as DECEASED_DAILY_3D_MovAvg_PER_100K

FROM (

SELECT
	DATE_OF_PUBLICATION AS DATE_OF_REPORT
,	SECURITY_REGION_CODE AS VRCODE
,	MUNICIPALITY_CODE AS GMCODE
,   INHABITANTS as INHABITANTS
,	sum(TOTAL_REPORTED) AS POSITIVES_DAILY_INCREASE
,	sum(HOSPITAL_ADMISSION) AS HOSPITAL_ADMISSION_DAILY_INCREASE
,	sum(DECEASED) AS DECEASE_DAILY_INCREASE
,	max(T1.DATE_LAST_INSERTED) as DATE_LAST_INSERTED
FROM VWSINTER.RIVM_COVID_19_NUMBER_MUNICIPALITY AS T1
LEFT JOIN (
    SELECT GMCODE, INHABITANTS FROM [VWSSTATIC].[INHABITANTS_PER_MUNICIPALITY]
    WHERE DATE_LAST_INSERTED = (SELECT max(DATE_LAST_INSERTED) FROM [VWSSTATIC].[INHABITANTS_PER_MUNICIPALITY])
    ) AS T3
    ON T1.MUNICIPALITY_CODE = T3.GMCODE
WHERE T1.DATE_LAST_INSERTED = (SELECT MAX(DATE_LAST_INSERTED) FROM VWSINTER.RIVM_COVID_19_NUMBER_MUNICIPALITY)
GROUP BY DATE_OF_PUBLICATION, MUNICIPALITY_CODE, INHABITANTS, SECURITY_REGION_CODE
) AS R