-- Copyright (c) 2020 De Staat der Nederlanden, Ministerie van   Volksgezondheid, Welzijn en Sport.
-- Licensed under the EUROPEAN UNION PUBLIC LICENCE v. 1.2 - see https://github.com/minvws/nl-contact-tracing-app-coordinationfor more information.
CREATE   VIEW [VWSREPORT].[V_COMPLETE_SECURITY_REGION]
AS
SELECT
T0.*,
PERCENTAGE_INFECTED_GGD,
INFECTED_GGD,
INFECTED_GGD/(INHABITANTS/100000.0) AS INFECTED_GGD_PER_100k,
TOTAL_TESTED_GGD,
TOTAL_TESTED_GGD/(INHABITANTS/100000.0) as TOTAL_TESTED_GGD_PER_100k,
SEWAGE_AVG
, dbo.CALC_PERC_CHANGE(T0.POSITIVES_7D_SUM, LAG(T0.POSITIVES_7D_SUM, 7, NULL) OVER (PARTITION BY T0.VRCODE ORDER BY T0.DATE_OF_REPORT)) as POSITIVES_PERC_CHANGE_PREV_WEEK,
ESCALATION_LEVEL,
DATE_OF_START_VALIDITY AS ESCALATION_LEVEL_VALID_FROM,

--Hospital Admissions Reported
HOSPITAL_NICE_DAILY_INCREASE AS HOSPITAL_NICE_REP_DAILY_INCREASE,
HOSPITAL_NICE_DAILY_INCREASE/(INHABITANTS/100000.0) as HOSPITAL_NICE_REP_DAILY_PER_100K,
HOSPITAL_NICE_DAILY_INCREASE/(INHABITANTS/1000000.0) as HOSPITAL_NICE_REP_DAILY_PER_1M,
SUM(HOSPITAL_NICE_DAILY_INCREASE) OVER(PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS HOSPITAL_NICE_REP_CUMMULATIVE,
AVG(CAST(HOSPITAL_NICE_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as HOSPITAL_NICE_REP_3D_MovAvg,
AVG(Cast(HOSPITAL_NICE_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as HOSPITAL_NICE_REP_3D_MovAvg_PER_100K,
SUM(CAST(HOSPITAL_NICE_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as HOSPITAL_NICE_REP_7D_SUM,
SUM(Cast(HOSPITAL_NICE_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as HOSPITAL_NICE_REP_7D_SUM_PER_100K,
SUM(Cast(HOSPITAL_NICE_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/(INHABITANTS/1000000.0) as HOSPITAL_NICE_REP_7D_SUM_PER_1M,

--Hospital Admissions Hospitalized
HOSPITAL_NICE_H_DAILY_INCREASE AS HOSPITAL_NICE_HOS_DAILY_INCREASE,
HOSPITAL_NICE_H_DAILY_INCREASE/(INHABITANTS/100000.0) as HOSPITAL_NICE_HOS_DAILY_PER_100K,
HOSPITAL_NICE_H_DAILY_INCREASE/(INHABITANTS/1000000.0) as HOSPITAL_NICE_HOS_DAILY_PER_1M,
SUM(HOSPITAL_NICE_H_DAILY_INCREASE) OVER(PARTITION BY VRCODE ORDER BY T0.DATE_OF_REPORT ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS HOSPITAL_NICE_HOS_CUMMULATIVE,
AVG(CAST(HOSPITAL_NICE_H_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY T0.DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as HOSPITAL_NICE_HOS_3D_MovAvg,
AVG(Cast(HOSPITAL_NICE_H_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY T0.DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as HOSPITAL_NICE_HOS_3D_MovAvg_PER_100K,
SUM(CAST(HOSPITAL_NICE_H_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY T0.DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as HOSPITAL_NICE_HOS_7D_SUM,
SUM(Cast(HOSPITAL_NICE_H_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY T0.DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as HOSPITAL_NICE_HOS_7D_SUM_PER_100K,
SUM(Cast(HOSPITAL_NICE_H_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY T0.DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/(INHABITANTS/1000000.0) as HOSPITAL_NICE_HOS_7D_SUM_PER_1M

from [VWSREPORT].[V_BASE_SECURITY_REGION] as T0
-- join percentage positive
LEFT JOIN (
    select DATE_OF_REPORT_UNIX AS DATE_OF_REPORT_T1,
    VRCODE AS VRCODE_T1,
    INFECTED_GGD,
    PERCENTAGE_INFECTED_GGD,
    TOTAL_TESTED_GGD,
    DATE_LAST_INSERTED
    FROM [VWSDEST].[POSITIVE_TESTED_PEOPLE_PERCENTAGE_PER_REGION]
    WHERE DATE_LAST_INSERTED = (SELECT max(DATE_LAST_INSERTED) FROM [VWSDEST].[POSITIVE_TESTED_PEOPLE_PERCENTAGE_PER_REGION])
    ) AS T1
    ON DATE_OF_REPORT_UNIX=T1.DATE_OF_REPORT_T1 and T1.VRCODE_T1=VRCODE
-- join sewage
LEFT JOIN (
    SELECT
    [WEEK_UNIX],
    [AVERAGE_RNA_FLOW_PER_100000] AS SEWAGE_AVG,
    [VRCODE] as VRCODE_T3
    FROM [VWSDEST].[SEWER_MEASUREMENTS_PER_REGION]
    WHERE DATE_LAST_INSERTED = (SELECT max(DATE_LAST_INSERTED) FROM [VWSDEST].[SEWER_MEASUREMENTS_PER_REGION])
    ) AS T3 on DATE_OF_REPORT_UNIX=T3.WEEK_UNIX and T3.VRCODE_T3=VRCODE
-- Escalation ladder
LEFT JOIN (
    SELECT
    cast(DATE_OF_REPORT as date) as DATE_OF_REPORT_T4,
    VRCODE AS VRCODE_T4,
    ESCALATION_LEVEL,
    DATE_OF_START_VALIDITY
    FROM [VWSDEST].[ESCALATIONLEVELS_PER_REGION]
    WHERE DATE_LAST_INSERTED=(SELECT MAX(DATE_LAST_INSERTED) FROM [VWSDEST].[ESCALATIONLEVELS_PER_REGION])

) AS T4 on DATE_OF_REPORT=T4.DATE_OF_REPORT_T4 and T4.VRCODE_T4=VRCODE
LEFT JOIN (
    SELECT
    DATE_OF_STATISTICS,
    VR_CODE AS VR_CODE_T5,
    REPORTED AS HOSPITAL_NICE_DAILY_INCREASE,
    HOSPITALIZED AS HOSPITAL_NICE_H_DAILY_INCREASE
    FROM [VWSDEST].[NICE_HOSPITAL_VR]
    WHERE DATE_LAST_INSERTED=(SELECT MAX(DATE_LAST_INSERTED) FROM [VWSDEST].[NICE_HOSPITAL_VR])
    ) AS T5
    ON T0.DATE_OF_REPORT=T5.DATE_OF_STATISTICS AND T0.VRCODE=T5.VR_CODE_T5