-- 1) CREATE VIEW(S)....
 CREATE   VIEW [VWSDEST].[V_RIVM_VACCINATION_SERIES_NL] AS
     WITH MASTER_SERIES AS (
         SELECT [VACCINATION_KEY], [SERIES_START_DATE], [SERIES_END_DATE], [LABEL_EN], [LABEL_NL], [SORT_ORDER]
         FROM [VWSSTATIC].[RIVM_VACCINATION_SERIES_MASTER_DATA]
         WHERE [DATE_LAST_INSERTED] = (SELECT MAX([DATE_LAST_INSERTED]) FROM [VWSSTATIC].[RIVM_VACCINATION_SERIES_MASTER_DATA])
     ),
     MASTER_PRIMARY AS (
         SELECT *
         FROM MASTER_SERIES
         WHERE [VACCINATION_KEY] = 'primary_completed'
     ),
     MASTER_CAMPAIGN_202310 AS (
         SELECT *
         FROM MASTER_SERIES
         WHERE [VACCINATION_KEY] = '202310_campaign'
     ),
     BASE_CTE AS (
        SELECT
            [DATE_LAST_INSERTED] AS [DATE_LAST_INSERTED],
            [DATE_OF_STATISTICS] AS [DATE_OF_STATISTICS],
            [VACCINE_SERIE_EN] AS [VACCINE_CAMPAIGN_NAME_EN_KEY],
            [TOTAL_VACCINATED] AS [VACCINE_ADMINISTERED]
        FROM [VWSDEST].[RIVM_VACCINATION_SERIES_NL]
        WHERE [DATE_LAST_INSERTED] = (SELECT MAX([DATE_LAST_INSERTED]) FROM [VWSDEST].[RIVM_VACCINATION_SERIES_NL])
     ),
     SERIES_CTE AS ( -- only data until the last ISO week
        SELECT *
        FROM BASE_CTE
        WHERE [DATE_OF_STATISTICS] <= [dbo].[WEEK_START_ISO]((SELECT MAX([DATE_OF_STATISTICS]) FROM BASE_CTE))
     ),
     SERIES_CTE_PRIMARY AS (
         SELECT *
         FROM SERIES_CTE
         WHERE (DATE_OF_STATISTICS >= (SELECT SERIES_START_DATE FROM MASTER_PRIMARY) OR ((SELECT SERIES_START_DATE FROM MASTER_PRIMARY) IS NULL))
         AND (DATE_OF_STATISTICS <= (SELECT SERIES_END_DATE FROM MASTER_PRIMARY) OR ((SELECT SERIES_END_DATE FROM MASTER_PRIMARY) IS NULL))
         AND [VACCINE_CAMPAIGN_NAME_EN_KEY] IN ('PRIMARY_1', 'PRIMARY_2')
     ),
     SERIES_CTE_CAMPAIGN_202310 AS (
         SELECT *
         FROM SERIES_CTE
         WHERE (DATE_OF_STATISTICS >= (SELECT SERIES_START_DATE FROM MASTER_CAMPAIGN_202310) OR ((SELECT SERIES_START_DATE FROM MASTER_CAMPAIGN_202310) IS NULL))
         AND (DATE_OF_STATISTICS <= (SELECT SERIES_END_DATE FROM MASTER_CAMPAIGN_202310) OR ((SELECT SERIES_END_DATE FROM MASTER_CAMPAIGN_202310) IS NULL))
         AND [VACCINE_CAMPAIGN_NAME_EN_KEY] NOT IN ('PRIMARY_1', 'PRIMARY_2')
     ),
     SERIES_CTE_PRIMARY_LAST_TIMEFRAME AS ( -- last timeframe is one week
         SELECT COALESCE(SUM([VACCINE_ADMINISTERED]),0) AS [VACCINE_ADMINISTERED_LAST_TIMEFRAME]
         FROM SERIES_CTE_PRIMARY
         WHERE DATE_OF_STATISTICS >= (dateadd(day, -6, [dbo].[WEEK_START_ISO]((SELECT MAX([DATE_OF_STATISTICS]) FROM BASE_CTE))))
         AND DATE_OF_STATISTICS <= ([dbo].[WEEK_START_ISO]((SELECT MAX([DATE_OF_STATISTICS]) FROM BASE_CTE)))
     ),
     SERIES_CTE_CAMPAIGN_202310_LAST_TIMEFRAME AS ( -- last timeframe is one week
         SELECT COALESCE(SUM([VACCINE_ADMINISTERED]),0) AS [VACCINE_ADMINISTERED_LAST_TIMEFRAME]
         FROM SERIES_CTE_CAMPAIGN_202310
         WHERE DATE_OF_STATISTICS >= (dateadd(day, -6, [dbo].[WEEK_START_ISO]((SELECT MAX([DATE_OF_STATISTICS]) FROM BASE_CTE))))
         AND DATE_OF_STATISTICS <= ([dbo].[WEEK_START_ISO]((SELECT MAX([DATE_OF_STATISTICS]) FROM BASE_CTE)))
     ),
     SERIES_CTE_CAMPAIGN_202310_TOTAL AS (
         SELECT COALESCE(SUM([VACCINE_ADMINISTERED]),0) AS [VACCINE_ADMINISTERED_TOTAL]
         FROM SERIES_CTE_CAMPAIGN_202310
     ),
     -- Construct Primary
     PRIMARY_SERIES AS (
         SELECT
             [dbo].[WEEK_START_ISO]((SELECT MAX([DATE_OF_STATISTICS]) FROM BASE_CTE)) AS [DATE_OF_STATISTICS],
             NULL AS [VACCINE_ADMINISTERED_TOTAL], -- we dont calculate totals for PRIMARY_SERIES
             A.[VACCINE_ADMINISTERED_LAST_TIMEFRAME] AS [VACCINE_ADMINISTERED_LAST_TIMEFRAME],
             [dbo].[CONVERT_DATETIME_TO_UNIX]([dbo].[WEEK_START_ISO]((SELECT MAX([DATE_OF_STATISTICS]) FROM BASE_CTE))) AS [DATE_UNIX],
             [dbo].[CONVERT_DATETIME_TO_UNIX](dateadd(day, -6, [dbo].[WEEK_START_ISO]((SELECT MAX([DATE_OF_STATISTICS]) FROM BASE_CTE)))) AS [DATE_START_UNIX],
             [dbo].[CONVERT_DATETIME_TO_UNIX]([dbo].[WEEK_START_ISO]((SELECT MAX([DATE_OF_STATISTICS]) FROM BASE_CTE))) AS [DATE_END_UNIX],
             [dbo].[CONVERT_DATETIME_TO_UNIX]((SELECT MAX([DATE_LAST_INSERTED]) FROM BASE_CTE)) AS [DATE_OF_INSERTION_UNIX],
             r.[LABEL_EN] AS [VACCINE_CAMPAIGN_NAME_EN],
             r.[LABEL_NL] AS [VACCINE_CAMPAIGN_NAME_NL],
             r.[SORT_ORDER] AS [VACCINE_CAMPAIGN_ORDER]
         FROM SERIES_CTE_PRIMARY_LAST_TIMEFRAME A
         -- Get Vaccine_Series name and Order
         CROSS JOIN (SELECT * FROM MASTER_PRIMARY) r
     ),
     -- Construct CAMPAIGN_202310
     CAMPAIGN_202310_SERIES AS (
         SELECT
             [dbo].[WEEK_START_ISO]((SELECT MAX([DATE_OF_STATISTICS]) FROM BASE_CTE)) AS [DATE_OF_STATISTICS],
             B.[VACCINE_ADMINISTERED_TOTAL] AS [VACCINE_ADMINISTERED_TOTAL],
             A.[VACCINE_ADMINISTERED_LAST_TIMEFRAME] AS [VACCINE_ADMINISTERED_LAST_TIMEFRAME],
             [dbo].[CONVERT_DATETIME_TO_UNIX]([dbo].[WEEK_START_ISO]((SELECT MAX([DATE_OF_STATISTICS]) FROM BASE_CTE))) AS [DATE_UNIX],
             [dbo].[CONVERT_DATETIME_TO_UNIX](dateadd(day, -6, [dbo].[WEEK_START_ISO]((SELECT MAX([DATE_OF_STATISTICS]) FROM BASE_CTE)))) AS [DATE_START_UNIX],
             [dbo].[CONVERT_DATETIME_TO_UNIX]([dbo].[WEEK_START_ISO]((SELECT MAX([DATE_OF_STATISTICS]) FROM BASE_CTE))) AS [DATE_END_UNIX],
             [dbo].[CONVERT_DATETIME_TO_UNIX]((SELECT MAX([DATE_LAST_INSERTED]) FROM BASE_CTE)) AS [DATE_OF_INSERTION_UNIX],
             r.[LABEL_EN] AS [VACCINE_CAMPAIGN_NAME_EN],
             r.[LABEL_NL] AS [VACCINE_CAMPAIGN_NAME_NL],
             r.[SORT_ORDER] AS [VACCINE_CAMPAIGN_ORDER]
         FROM SERIES_CTE_CAMPAIGN_202310_LAST_TIMEFRAME A
         CROSS JOIN SERIES_CTE_CAMPAIGN_202310_TOTAL B
         -- Get Vaccine_Series name and Order
         CROSS JOIN (SELECT * FROM MASTER_CAMPAIGN_202310) r
     )
     SELECT DATE_OF_STATISTICS,
             VACCINE_CAMPAIGN_ORDER,
             VACCINE_CAMPAIGN_NAME_NL,
             VACCINE_CAMPAIGN_NAME_EN,
             VACCINE_ADMINISTERED_TOTAL,
             VACCINE_ADMINISTERED_LAST_TIMEFRAME,
             DATE_UNIX,
             DATE_END_UNIX,
             DATE_START_UNIX,
             DATE_OF_INSERTION_UNIX
     FROM PRIMARY_SERIES
 
         UNION
     
     SELECT  DATE_OF_STATISTICS,
             VACCINE_CAMPAIGN_ORDER,
             VACCINE_CAMPAIGN_NAME_NL,
             VACCINE_CAMPAIGN_NAME_EN,
             VACCINE_ADMINISTERED_TOTAL,
             VACCINE_ADMINISTERED_LAST_TIMEFRAME,
             DATE_UNIX,
             DATE_END_UNIX,
             DATE_START_UNIX,
             DATE_OF_INSERTION_UNIX
     FROM CAMPAIGN_202310_SERIES
     