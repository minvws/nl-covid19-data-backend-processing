trigger: 
  branches:
    include:
      - main
      - master
      - release/*
      - develop
  paths:
    include:
      - "src/"
    exclude:
      - "**/*.md"
      
resources:
  repositories: 
    - repository: nl-cdb-be-apis
      type: git
      name: "Corona Dashboard/nl-cdb-be-apis"

pool:
  vmImage: ubuntu-latest

variables:
  WORKING_DIRECTORY: $(Build.SourcesDirectory)/$(Build.Repository.Name)

stages:
  - stage: Build
    jobs:
      - job: "Build"
        steps:

          - checkout: self
          - checkout: nl-cdb-be-apis
            path: '$(Build.SourcesDirectory)/__nl-cdb-be-apis'

          - script: ls $(Build.SourcesDirectory)

          - task: PowerShell@2
            displayName: "Task 1: Build Artifacts"
            inputs:
              filePath: "$(WORKING_DIRECTORY)/.devops/scripts/build-script.ps1"
              arguments: > 
                -SourceDirectory "./src" 
                -ModifiedFiles $(git diff-tree --no-commit-id --name-only -r $(Build.SourceVersion))
                -DatatinoDevOpsGitRefUrl "../nl-cdb-be-apis"
              failOnStderr: true
              pwsh: true
              workingDirectory: $(WORKING_DIRECTORY)

          - task: CopyFiles@2
            displayName: "Task 2: Copy Scripts"
            inputs:
              SourceFolder: '$(WORKING_DIRECTORY)/..'
              Contents: '*.sql'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/src'
              OverWrite: true

          - task: CopyFiles@2
            displayName: "Task 3: Copy Powershell Scripts"
            inputs:
              SourceFolder: "$(WORKING_DIRECTORY)/.devops/scripts"
              Contents: "**/*.ps1"
              TargetFolder: "$(Build.ArtifactStagingDirectory)/scripts"
              OverWrite: true

          # Publish the artifact to be used as a source for a release pipeline.
          - task: ArchiveFiles@2
            displayName: "Task 5: Set Artifacts"
            inputs:
              rootFolderOrFile: $(ARM_TEMPLATES_DIRECTORY)
              includeRootFolder: false
              archiveType: 'tar'
              tarCompression: 'gz'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-factory.tgz'
              replaceExistingArchive: true

          - task: PublishBuildArtifacts@1
            displayName: "Task 4: Publish Artifacts"
            inputs:
              PathtoPublish: "$(Build.ArtifactStagingDirectory)"
              ArtifactName: "drop"
              publishLocation: "Container"
