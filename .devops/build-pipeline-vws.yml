# trigger: 
#   branches:
#     include:
#       - main
#       - master
#       - release/*
#       - develop*
#   paths:
#     include:
#       - "src/"
#     exclude:
#       - "**/*.md"
#       - "**/*.ps1"
      
resources:
  repositories: 
    - repository: nl-cdb-be-apis
      type: git
      name: "Corona Dashboard/nl-cdb-be-apis"

pool:
  vmImage: ubuntu-latest

variables:
  WORKING_DIRECTORY: $(Build.SourcesDirectory)/$(Build.Repository.Name)

stages:
  - stage: Build
    jobs:
      - job: "Build"
        steps:

          - checkout: self
          - checkout: nl-cdb-be-apis

          - script: | 
              mv ./nl-cdb-be-apis ./__nl-cdb-be-apis 
              dir $(Build.SourcesDirectory)
            displayName: "Task 1: Set Checkouts"

          - task: PowerShell@2
            displayName: "Task 2: Build MSSQL Artifacts"
            inputs:
              filePath: "$(WORKING_DIRECTORY)/.devops/scripts/build-script.ps1"
              arguments: > 
                -SourceDirectory "./src" 
                -ModifiedFiles $(git diff-tree --no-commit-id --name-only -r $(Build.SourceVersion)^..$(Build.SourceVersion))
                -DatatinoDevOpsGitRefUrl "../nl-cdb-be-apis"
              failOnStderr: true
              pwsh: true
              workingDirectory: $(WORKING_DIRECTORY)

          - task: CopyFiles@2
            displayName: "Task 3: Copy MSSQL Database Update Scripts"
            inputs:
              SourceFolder: '$(WORKING_DIRECTORY)'
              Contents: '**/*.sql'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/src'
              OverWrite: true

          - task: CopyFiles@2
            displayName: "Task 4: Copy Powershell Release Scripts"
            inputs:
              SourceFolder: "$(WORKING_DIRECTORY)/.devops/scripts"
              Contents: "**/*.ps1"
              TargetFolder: "$(Build.ArtifactStagingDirectory)/.devops/scripts"
              OverWrite: true

          - task: PublishBuildArtifacts@1
            displayName: "Task 5: Publish Artifacts"
            inputs:
              PathtoPublish: "$(Build.ArtifactStagingDirectory)"
              ArtifactName: "drop"
              publishLocation: "Container"
