# Required Azure Pipelines Tasks: https://marketplace.visualstudio.com/items?itemName=qetza.replacetokens

parameters:
  ENVIRONMENT:
    required: true
    description: "Available values: 'development', 'acceptance', 'production'"
  AZURE_RM_SERVICE_PRINCIPAL_NAME:
    required: true
    description: "Name of the Azure Service Prinicpal"
  WORKING_DIRECTORY:
    required: true

jobs:
  - deployment: ${{ parameters.ENVIRONMENT }}
    environment: ${{ parameters.ENVIRONMENT }}-BusinessLogic
    variables:
      - group: "business-logic-${{ parameters.environment }}-vws-vg"
    strategy:
      runOnce:
        deploy:
          steps:
          
            - checkout: none

            # Replace Tokens
            - task: replacetokens@5
              displayName: 'Task 1: Replace Environment Tokens'
              inputs:
                rootDirectory: ${{ parameters.WORKING_DIRECTORY }}/src
                targetFiles: '**/*.sql'
                encoding: 'auto'
                tokenPattern: 'custom'
                tokenPrefix: '#{'
                tokenSuffix: '}#'
                writeBOM: false
                actionOnMissing: 'error' # warn is also possible
                keepToken: true
                actionOnNoFiles: 'continue'
                enableTransforms: false
                enableRecursion: false
                useLegacyPattern: false
                enableTelemetry: true
        
            # Execute Scripts

            - task: PowerShell@2
              inputs:
                targetType: 'inline'
                script: |
                  & "./.devops/scripts/release-script.ps1" `
                                        -Server "$(AZURE_SQL_SERVER_NAME)" `
                                        -Database "$(AZURE_SQL_DATABASE_NAME)" `
                                        -SourceDirectory "./src" `
                                        -Password "$(AZURE_SQL_DATABASE_LOGIN_PASSWORD)" `
                                        -Username "$(AZURE_SQL_DATABASE_LOGIN_USERNAME)"
                failOnStderr: true
                workingDirectory: '${{ parameters.WORKING_DIRECTORY }}'
                
            # Post Deploy
            - task: PowerShell@2
              inputs: 
                targetType: 'inline'
                script: |
                  Remove-Item "${{ parameters.WORKING_DIRECTORY }}" -Recurse
              displayName: "Task 3: Post Deploy"
              condition: always()

