# Required Azure Pipelines Tasks: https://marketplace.visualstudio.com/items?itemName=qetza.replacetokens

parameters:
  ENVIRONMENT:
    required: true
    description: "Available values: 'development', 'acceptance', 'production'"
  AZURE_RM_SERVICE_PRINCIPAL_NAME:
    required: true
    description: "Name of the Azure Service Prinicpal"
  WORKING_DIRECTORY:
    required: true

jobs:
  - deployment: ${{ parameters.ENVIRONMENT }}
    environment: ${{ parameters.ENVIRONMENT }}-BusinessLogic
    variables:
      - group: "business-logic-${{ parameters.environment }}-vg"
    strategy:
      runOnce:
        deploy:
          steps:
          
            - checkout: none
            - task: AzureCLI@2
              inputs:
                azureSubscription: '[AzureDevOps]-ServiceConnection'
                scriptType: 'ps'
                scriptLocation: 'inlineScript'
                inlineScript: |
                  write-host "Trying to deploy dacpac
                  sqlpackage /Action:Publish /SourceFile:"${{ parameters.WORKING_DIRECTORY }} /CoronaDashboard.BusinessLogic.Database/bin/Release/CoronaDashboard.BusinessLogic.Database.dacpac" /TargetDatabaseName:"$(AZURE_SQL_DATABASE_NAME)" /TargetServerName:"$(AZURE_SQL_SERVER_NAME)" /TargetUser:"$(AZURE_SQL_DATABASE_LOGIN_USERNAME)"  /TargetPassword:"$(AZURE_SQL_DATABASE_LOGIN_PASSWORD)"
                addSpnToEnvironment: true
          #  - task: SqlAzureDacpacDeployment@1
          #    displayName: 'Task 1: Azure SQL DacpacTask'
          #    inputs:
          #      azureSubscription: ${{ parameters.AZURE_RM_SERVICE_PRINCIPAL_NAME }}
          #      ServerName: '$(AZURE_SQL_SERVER_NAME)'
          #      DatabaseName: '$(AZURE_SQL_DATABASE_NAME)'
          #      SqlUsername: '$(AZURE_SQL_DATABASE_LOGIN_USERNAME)'
          #      SqlPassword: '$(AZURE_SQL_DATABASE_LOGIN_PASSWORD)'
          #      DeploymentAction: DeployReport
          #      DacpacFile: '${{ parameters.WORKING_DIRECTORY }}/CoronaDashboard.BusinessLogic.Database/bin/Release/CoronaDashboard.BusinessLogic.Database.dacpac'
          #      AdditionalArguments: '/p:BlockOnPossibleDataLoss=false /p:GenerateSmartDefaults=true /p:TreatVerificationErrorsAsWarnings=true'
                
            # Post Deploy
            - task: PowerShell@2
              inputs: 
                targetType: 'inline'
                script: |
                  Remove-Item "${{ parameters.WORKING_DIRECTORY }}" -Recurse -Force
              displayName: "Task 2: Post Deploy"
              condition: always()


