-- Copyright (c) 2020 De Staat der Nederlanden, Ministerie van   Volksgezondheid, Welzijn en Sport.
-- Licensed under the EUROPEAN UNION PUBLIC LICENCE v. 1.2 - see https://github.com/minvws/nl-contact-tracing-app-coordinationfor more information.
CREATE OR ALTER VIEW [VWSREPORT].[V_BASE_SECURITY_REGION] AS
SELECT
    DATE_OF_REPORT,
    dbo.CONVERT_DATETIME_TO_UNIX(DATE_OF_REPORT) AS DATE_OF_REPORT_UNIX,
    VRCODE,
    DATE_LAST_INSERTED,
    INHABITANTS,
    -- Positives
    POSITIVES_DAILY_INCREASE as POSITIVES_DAILY,
    POSITIVES_DAILY_INCREASE/(INHABITANTS/100000.0) as POSITIVES_DAILY_PER_100K,
    SUM(POSITIVES_DAILY_INCREASE/(INHABITANTS/100000.0)) OVER(PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS POSITIVES_7D_SUM_PER_100K,
    SUM(POSITIVES_DAILY_INCREASE) OVER(PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS POSITIVES_7D_SUM,
    SUM(POSITIVES_DAILY_INCREASE) OVER(PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS POSITIVES_CUMMULATIVE,
    AVG(CAST(POSITIVES_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as POSITIVE_DAILY_3D_MovAvg,
    AVG(CAST(POSITIVES_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as POSITIVE_DAILY_7D_MovAvg,
	AVG(Cast(POSITIVES_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as POSITIVE_DAILY_3D_MovAvg_PER_100K,
	AVG(Cast(POSITIVES_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as POSITIVE_DAILY_7D_MovAvg_PER_100K,

    -- Hospital
    HOSPITAL_GGD_DAILY_INCREASE as HOSPITAL_GGD_DAILY_INCREASE,
    HOSPITAL_GGD_DAILY_INCREASE/(INHABITANTS/100000.0) as HOSPITAL_GGD_DAILY_PER_100K,
    HOSPITAL_GGD_DAILY_INCREASE/(INHABITANTS/1000000.0) as HOSPITAL_GGD_DAILY_PER_1M,
    SUM(HOSPITAL_GGD_DAILY_INCREASE) OVER(PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS HOSPITAL_GGD_CUMMULATIVE,
    AVG(CAST(HOSPITAL_GGD_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as HOSPITAL_GGD_3D_MovAvg,
    AVG(Cast(HOSPITAL_GGD_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as HOSPITAL_GGD_3D_MovAvg_PER_100K,
    SUM(CAST(HOSPITAL_GGD_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as HOSPITAL_GGD_7D_SUM,
    SUM(Cast(HOSPITAL_GGD_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as HOSPITAL_GGD_7D_SUM_PER_100K,
    SUM(Cast(HOSPITAL_GGD_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/(INHABITANTS/1000000.0) as HOSPITAL_GGD_7D_SUM_PER_1M,

    -- deceased
    DECEASE_DAILY_INCREASE as DECEASE_DAILY_INCREASE,
    DECEASE_DAILY_INCREASE/(INHABITANTS/100000.0) as DECEASED_DAILY_PER_100K,
    SUM(DECEASE_DAILY_INCREASE) OVER(PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS DECEASED_CUMMULATIVE,
    AVG(CAST(DECEASE_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as DECEASED_DAILY_3D_MovAvg,
    AVG(Cast(DECEASE_DAILY_INCREASE AS FLOAT)) OVER (PARTITION BY VRCODE ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as DECEASED_DAILY_3D_MovAvg_PER_100K

FROM (

SELECT
    DATE_OF_REPORT,
    VRCODE,
    -- sum(INHABITANTS), THIS IS WHAT WE WANT TO DO!! BUT the inhabitants numbers dont match.. between VR and GM... sigh
    max(INHABITANTS_VR) AS INHABITANTS,
    max(DATE_LAST_INSERTED) AS DATE_LAST_INSERTED,
    SUM(POSITIVES_DAILY_INCREASE) AS POSITIVES_DAILY_INCREASE,
    SUM(HOSPITAL_GGD_DAILY_INCREASE) AS HOSPITAL_GGD_DAILY_INCREASE,
    SUM(DECEASE_DAILY_INCREASE) AS DECEASE_DAILY_INCREASE
FROM [VWSREPORT].[V_BASE_MUNICIPALITY]
LEFT JOIN (
    SELECT VGRNR, INHABITANTS AS INHABITANTS_VR
    FROM [VWSSTATIC].[INHABITANTS_PER_SAFETY_REGION]
    WHERE DATE_LAST_INSERTED = (SELECT MAX(DATE_LAST_INSERTED) FROM [VWSSTATIC].[INHABITANTS_PER_SAFETY_REGION])
    ) AS T1
    ON VRCODE = T1.VGRNR
group by VRCODE, DATE_OF_REPORT
) as R