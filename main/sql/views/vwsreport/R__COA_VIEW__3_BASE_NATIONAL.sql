-- Copyright (c) 2020 De Staat der Nederlanden, Ministerie van   Volksgezondheid, Welzijn en Sport.
-- Licensed under the EUROPEAN UNION PUBLIC LICENCE v. 1.2 - see https://github.com/minvws/nl-contact-tracing-app-coordinationfor more information.
CREATE OR ALTER VIEW [VWSREPORT].[V_BASE_NATIONAL] AS
SELECT
    DATE_OF_REPORT AS DATE_OF_REPORT,
    dbo.CONVERT_DATETIME_TO_UNIX(DATE_OF_REPORT) AS DATE_OF_REPORT_UNIX,

    DATE_LAST_INSERTED,
    INHABITANTS AS INHABITANTS,

    -- positives
    POSITIVES_DAILY,
    POSITIVES_DAILY/(INHABITANTS/100000.0) AS POSITIVES_DAILY_PER_100K,
    SUM(POSITIVES_DAILY) OVER(ORDER BY DATE_OF_REPORT ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS POSITIVES_CUMULATIVE,
    AVG(CAST(POSITIVES_DAILY AS FLOAT)) OVER (ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as POSITIVE_DAILY_3D_MovAvg,
	AVG(CAST(POSITIVES_DAILY AS FLOAT)) OVER (ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as POSITIVE_DAILY_7D_MovAvg,
	SUM(CAST(POSITIVES_DAILY AS FLOAT)) OVER (ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as POSITIVE_DAILY_7D_SUM,
	SUM(CAST(POSITIVES_DAILY AS FLOAT)) OVER (ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as POSITIVES_7D_SUM_PER_100K,
	AVG(Cast(POSITIVES_DAILY AS FLOAT)) OVER (ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as POSITIVE_DAILY_3D_MovAvg_PER_100K,
	AVG(Cast(POSITIVES_DAILY AS FLOAT)) OVER (ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as POSITIVE_DAILY_7D_MovAvg_PER_100K,

    -- Hospital
    HOSPITAL_GGD_DAILY_INCREASE as HOSPITAL_GGD_DAILY_INCREASE,
    HOSPITAL_GGD_DAILY_INCREASE/(INHABITANTS/100000.0) as HOSPITAL_GGD_DAILY_PER_100K,
    HOSPITAL_GGD_DAILY_INCREASE/(INHABITANTS/1000000.0) as HOSPITAL_GGD_DAILY_PER_1M,
    SUM(HOSPITAL_GGD_DAILY_INCREASE) OVER(ORDER BY DATE_OF_REPORT ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS HOSPITAL_GGD_CUMMULATIVE,
    AVG(CAST(HOSPITAL_GGD_DAILY_INCREASE AS FLOAT)) OVER (ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as HOSPITAL_GGD_3D_MovAvg,
    AVG(Cast(HOSPITAL_GGD_DAILY_INCREASE AS FLOAT)) OVER (ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as HOSPITAL_GGD_3D_MovAvg_PER_100K,
    SUM(CAST(HOSPITAL_GGD_DAILY_INCREASE AS FLOAT)) OVER (ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as HOSPITAL_GGD_7D_SUM,
    SUM(Cast(HOSPITAL_GGD_DAILY_INCREASE AS FLOAT)) OVER (ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as HOSPITAL_GGD_7D_SUM_PER_100K,
    SUM(Cast(HOSPITAL_GGD_DAILY_INCREASE AS FLOAT)) OVER (ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/(INHABITANTS/1000000.0) as HOSPITAL_GGD_7D_SUM_PER_1M,

-- deceased
    DECEASE_DAILY_INCREASE as DECEASE_DAILY_INCREASE,
    DECEASE_DAILY_INCREASE/(INHABITANTS/100000.0) as DECEASED_DAILY_PER_100K,
    SUM(DECEASE_DAILY_INCREASE) OVER(ORDER BY DATE_OF_REPORT ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS DECEASED_CUMULATIVE,
    AVG(CAST(DECEASE_DAILY_INCREASE AS FLOAT)) OVER (ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) as DECEASED_DAILY_3D_MovAvg,
    AVG(CAST(DECEASE_DAILY_INCREASE AS FLOAT)) OVER (ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as DECEASED_DAILY_7D_MovAvg,
    SUM(CAST(DECEASE_DAILY_INCREASE AS FLOAT)) OVER (ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as DECEASED_DAILY_7D_SUM,
    AVG(Cast(DECEASE_DAILY_INCREASE AS FLOAT)) OVER (ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as DECEASED_DAILY_3D_MovAvg_PER_100K,
    AVG(Cast(DECEASE_DAILY_INCREASE AS FLOAT)) OVER (ORDER BY DATE_OF_REPORT ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)/(INHABITANTS/100000.0) as DECEASED_DAILY_7D_MovAvg_PER_100K

FROM (
select
	DATE_OF_REPORT AS DATE_OF_REPORT,
    max(DATE_LAST_INSERTED) as DATE_LAST_INSERTED,
    sum(INHABITANTS) as INHABITANTS,
    sum(POSITIVES_DAILY) AS POSITIVES_DAILY,
    sum(HOSPITAL_GGD_DAILY_INCREASE) AS HOSPITAL_GGD_DAILY_INCREASE,
    sum(DECEASE_DAILY_INCREASE) AS DECEASE_DAILY_INCREASE
from [VWSREPORT].[V_BASE_SECURITY_REGION] group by DATE_OF_REPORT
) as R

