-- Copyright (c) 2020 De Staat der Nederlanden, Ministerie van   Volksgezondheid, Welzijn en Sport.
-- Licensed under the EUROPEAN UNION PUBLIC LICENCE v. 1.2 - see https://github.com/minvws/nl-contact-tracing-app-coordinationfor more information.
CREATE OR ALTER  PROCEDURE [dbo].[SP_Elderly_At_Home_Dest]
AS
BEGIN
    WITH BASE_CTE AS (
        SELECT
            DATE_OF_STATISTIC_REPORTED AS DATE_OF_REPORT,
            dbo.CONVERT_DATETIME_TO_UNIX(DATE_OF_STATISTIC_REPORTED) AS DATE_OF_REPORT_UNIX,
            TOTAL_CASES_REPORTED AS INFECTED_ELDERLY_AT_HOME_DAILY,
            TOTAL_DECEASED_REPORTED AS DECEASED_ELDERLY_AT_HOME_DAILY,
			SECURITY_REGION_CODE
        FROM
            VWSINTER.ELDERLY_AT_HOME
        WHERE DATE_LAST_INSERTED = (SELECT MAX(DATE_LAST_INSERTED) from VWSINTER.ELDERLY_AT_HOME)
            AND DATE_OF_STATISTIC_REPORTED > '1900-01-01 00:00:00.000'
   )

, TOTALS_CTE AS (
    SELECT 
         DATE_OF_REPORT
        ,DATE_OF_REPORT_UNIX
        ,SUM(INFECTED_ELDERLY_AT_HOME_DAILY) AS INFECTED_ELDERLY_AT_HOME_DAILY
        --calculate the infected inhabitants in the region per 100k
        ,CAST((CAST((SUM(INFECTED_ELDERLY_AT_HOME_DAILY)) as decimal(10,2))/ SUM(INHABITANTS)*100000) as decimal(10,2)) AS INFECTED_ELDERLY_AT_HOME_DAILY_PER_100K    
		,SUM(DECEASED_ELDERLY_AT_HOME_DAILY) AS DECEASED_ELDERLY_AT_HOME_DAILY
		,LAG ([DATE_OF_REPORT] ,6) OVER (ORDER BY DATE_OF_REPORT ASC)  AS [DATE_RANGE_START]
		,LAG (DATE_OF_REPORT ,1)   OVER (ORDER BY DATE_OF_REPORT ASC)  AS [DATE_OF_REPORTS_LAG]
		,LAG (DATE_OF_REPORT ,7)   OVER (ORDER BY DATE_OF_REPORT ASC)  AS [DATE_RANGE_START_LAG]
    FROM BASE_CTE T1
	LEFT JOIN (SELECT [Code Veiligheidsregio]  AS VRCODE
                         ,[Personen van 70 jaar of ouder in particuliere huishoudens] AS [INHABITANTS]
                    FROM [VWSSTATIC].[CBS_INHABITANTS_ELDERLY_AT_HOME]
					WHERE DATE_LAST_INSERTED = (SELECT MAX(DATE_LAST_INSERTED) FROM [VWSSTATIC].[CBS_INHABITANTS_ELDERLY_AT_HOME])) T2
        ON T1.SECURITY_REGION_CODE=T2.VRCODE
	    GROUP BY DATE_OF_REPORT_UNIX, DATE_OF_REPORT
		) 	
	
	INSERT INTO VWSDEST.ELDERLY_AT_HOME
        (
            DATE_OF_REPORT,
            DATE_OF_REPORT_UNIX,
            INFECTED_ELDERLY_AT_HOME_DAILY,
			INFECTED_ELDERLY_AT_HOME_DAILY_PER_100K,
            DECEASED_ELDERLY_AT_HOME_DAILY,
			[DATE_RANGE_START],
		    [DATE_OF_REPORTS_LAG],
		    [DATE_RANGE_START_LAG],
	        [7D_AVERAGE_INFECTED_ELDERLY_AT_HOME_DAILY],
            [7D_AVERAGE_INFECTED_ELDERLY_AT_HOME_DAILY_LAG],
		    [7D_AVERAGE_DECEASED_ELDERLY_AT_HOME_DAILY],
		    [7D_AVERAGE_DECEASED_ELDERLY_AT_HOME_DAILY_LAG]
        )
        SELECT
            DATE_OF_REPORT,
            DATE_OF_REPORT_UNIX,
            INFECTED_ELDERLY_AT_HOME_DAILY,
			INFECTED_ELDERLY_AT_HOME_DAILY_PER_100K,
			DECEASED_ELDERLY_AT_HOME_DAILY,
			[DATE_RANGE_START],
		    [DATE_OF_REPORTS_LAG],
		    [DATE_RANGE_START_LAG],
			CASE WHEN
				[DATE_RANGE_START] IS NULL THEN NULL
				ELSE ROUND(AVG(CAST([INFECTED_ELDERLY_AT_HOME_DAILY]     AS FLOAT)) OVER (ORDER BY [DATE_OF_REPORT] ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW),1) 
			END AS [7D_AVERAGE_INFECTED_ELDERLY_AT_HOME_DAILY],
            CASE WHEN
				[DATE_RANGE_START_LAG] IS NULL THEN NULL
				ELSE ROUND(AVG(CAST([INFECTED_ELDERLY_AT_HOME_DAILY]      AS FLOAT)) OVER (ORDER BY [DATE_OF_REPORT] ASC ROWS BETWEEN 7 PRECEDING AND 1 PRECEDING),1) 
			END AS [7D_AVERAGE_INFECTED_ELDERLY_AT_HOME_DAILY_LAG],
		    CASE WHEN
				[DATE_RANGE_START] IS NULL THEN NULL
				ELSE ROUND(AVG(CAST([DECEASED_ELDERLY_AT_HOME_DAILY]     AS FLOAT)) OVER (ORDER BY [DATE_OF_REPORT] ASC ROWS BETWEEN 6 PRECEDING AND CURRENT ROW),1) 
			END AS [7D_AVERAGE_DECEASED_ELDERLY_AT_HOME_DAILY],
            CASE WHEN
				[DATE_RANGE_START_LAG] IS NULL THEN NULL
				ELSE ROUND(AVG(CAST([DECEASED_ELDERLY_AT_HOME_DAILY]     AS FLOAT)) OVER (ORDER BY [DATE_OF_REPORT] ASC ROWS BETWEEN 7 PRECEDING AND 1 PRECEDING),1) 
			END AS [7D_AVERAGE_DECEASED_ELDERLY_AT_HOME_DAILY_LAG]
        FROM TOTALS_CTE
END;
GO

