-- Copyright (c) 2021 De Staat der Nederlanden, Ministerie van   Volksgezondheid, Welzijn en Sport. 
-- Licensed under the EUROPEAN UNION PUBLIC LICENCE v. 1.2 - see https://github.com/minvws/nl-contact-tracing-app-coordinationfor more information.

CREATE OR ALTER PROCEDURE [dbo].[SP_RIVM_HOSPITAL_IC_ADMISSIONS_OVERTIME_BYAGEGROUP_DEST]
AS
BEGIN			
	DECLARE @AgeGroupScope 
		TABLE (AgeGroup varchar(100), AgeGroupGrouped varchar(100))

	INSERT INTO @AgeGroupScope
	VALUES
		('0-14','0-19')
		,('15-19','0-19')
		,('20-24','20-29')
		,('25-29','20-29')	
		,('30-34','30-39')	
		,('35-39','30-39')	
		,('40-44','40-49')
		,('45-49','40-49')	
		,('50-54','50-59')
		,('55-59','50-59')
		,('60-64','60-69')
		,('65-69','60-69')
		,('70-74','70-79')
		,('75-79','70-79')
		,('80-84','80-89')
		,('85-89','80-89')
		,('90+','90+')			

	-- Returns a date week start if last week start contains NULL on fields hospital admission or IC admission
	DECLARE @LastWeekEmptyAdmissions date = (
		-- Latest week with empty admissions
		SELECT MAX([DATE_OF_STATISTICS_WEEK_START])
		FROM VWSINTER.RIVM_HOSPITAL_IC_ADMISSIONS_OVERTIME_BYAGEGROUP ADMISSIONS
		INNER JOIN
			@AgeGroupScope AgeGroupScope ON
			AgeGroupScope.AgeGroup = ADMISSIONS.[AGE_GROUP]
		WHERE
			-- Is empty
			([HOSPITAL_ADMISSION] IS NULL OR IC_ADMISSION IS NULL) AND 
			-- Last file
			DATE_LAST_INSERTED = (
				SELECT MAX(DATE_LAST_INSERTED) 
				FROM VWSINTER.RIVM_HOSPITAL_IC_ADMISSIONS_OVERTIME_BYAGEGROUP) AND 
				-- Last week
			[DATE_OF_STATISTICS_WEEK_START] = (
				SELECT MAX([DATE_OF_STATISTICS_WEEK_START]) 
				FROM VWSINTER.RIVM_HOSPITAL_IC_ADMISSIONS_OVERTIME_BYAGEGROUP))

	-- Regroup static for 0-19 group
	;WITH AgeGroupDistribution 
	AS
	(
		SELECT 
			CASE 
				WHEN AGEGROUP IN ('0-9', '10-19') THEN '0-19'
				ELSE AGEGROUP
			END										AS AGEGROUP, 
			SUM(CAST(INHABITANTS as decimal(19,3))) AS INHABITANTS
		FROM
			[VWSSTATIC].[CBS_AGEGROUP_DISTRIBUTION]
		WHERE
			DATE_LAST_INSERTED = (SELECT MAX(DATE_LAST_INSERTED) FROM [VWSSTATIC].[CBS_AGEGROUP_DISTRIBUTION])
		GROUP BY
			CASE 
				WHEN AGEGROUP IN ('0-9', '10-19') THEN '0-19'
				ELSE AGEGROUP
			END
	)
	
	INSERT INTO VWSDEST.RIVM_HOSPITAL_IC_ADMISSIONS_OVERTIME_BYAGEGROUP (
		[DATE_OF_REPORT]
		,[DATE_OF_STATISTICS_WEEK_START]
		,[DATE_OF_STATISTICS_WEEK_END]
		,[AGE_GROUP_GROUPED]
		,[HOSPITAL_ADMISSION_NOTIFICATION]
		,[HOSPITAL_ADMISSION]
		,[IC_ADMISSION_NOTIFICATION]
		,[IC_ADMISSION]
		,[HOSPITAL_ADMISSION_PER1M]
		,[IC_ADMISSION_PER1M]		
		)
	
	SELECT
         [DATE_OF_REPORT]									AS [DATE_OF_REPORT]
        ,[DATE_OF_STATISTICS_WEEK_START]					AS [DATE_OF_STATISTICS_WEEK_START]
		,DATEADD(day,6,[DATE_OF_STATISTICS_WEEK_START])		AS [DATE_OF_STATISTICS_WEEK_END]		
        ,AgeGroupScope.AgeGroupGrouped						AS [AGE_GROUP_GROUPED]
        ,SUM([HOSPITAL_ADMISSION_NOTIFICATION])				AS [HOSPITAL_ADMISSION_NOTIFICATION]
        ,SUM([HOSPITAL_ADMISSION])							AS [HOSPITAL_ADMISSION]
        ,SUM([IC_ADMISSION_NOTIFICATION])					AS [IC_ADMISSION_NOTIFICATION]
        ,SUM([IC_ADMISSION])								AS [IC_ADMISSION]
		,CAST(SUM((1000000 / AgeGroupDistribution.INHABITANTS) * [HOSPITAL_ADMISSION]) as decimal(19,1))							
															AS [HOSPITAL_ADMISSION_PER1M]
		,CAST(SUM((1000000 / AgeGroupDistribution.INHABITANTS) * [IC_ADMISSION]) as decimal(19,1))		
															AS [IC_ADMISSION_PER1M]


    FROM  
        VWSINTER.RIVM_HOSPITAL_IC_ADMISSIONS_OVERTIME_BYAGEGROUP Admissions
    -- Age groups only
	INNER JOIN
		@AgeGroupScope AgeGroupScope ON
		AgeGroupScope.AgeGroup = ADMISSIONS.[AGE_GROUP]
	LEFT JOIN
		AgeGroupDistribution ON		
		AgeGroupDistribution.AGEGROUP = AgeGroupScope.AgeGroupGrouped
	
	WHERE
		-- Last file
        Admissions.DATE_LAST_INSERTED = (
            SELECT MAX(DATE_LAST_INSERTED) 
            FROM VWSINTER.RIVM_HOSPITAL_IC_ADMISSIONS_OVERTIME_BYAGEGROUP) AND
		
		-- Remove last empty week if empty week
		(@LastWeekEmptyAdmissions IS NULL OR [DATE_OF_STATISTICS_WEEK_START] < @LastWeekEmptyAdmissions)
	GROUP BY
		[DATE_OF_REPORT]								
		,[DATE_OF_STATISTICS_WEEK_START]				
		,DATEADD(day,7,[DATE_OF_STATISTICS_WEEK_START])	
		,AgeGroupScope.AgeGroupGrouped		
	UNION
	-- Total, including unknown age group
	SELECT
         [DATE_OF_REPORT]									AS [DATE_OF_REPORT]
        ,[DATE_OF_STATISTICS_WEEK_START]					AS [DATE_OF_STATISTICS_WEEK_START]
		,DATEADD(day,6,[DATE_OF_STATISTICS_WEEK_START])		AS [DATE_OF_STATISTICS_WEEK_END]		
        ,'total'											AS [AGE_GROUP_GROUPED]
        ,SUM([HOSPITAL_ADMISSION_NOTIFICATION])				AS [HOSPITAL_ADMISSION_NOTIFICATION]
        ,SUM([HOSPITAL_ADMISSION])							AS [HOSPITAL_ADMISSION]
        ,SUM([IC_ADMISSION_NOTIFICATION])					AS [IC_ADMISSION_NOTIFICATION]
        ,SUM([IC_ADMISSION])								AS [IC_ADMISSION]
		,CAST(SUM((1000000 / AgeGroupDistribution.INHABITANTS) * [HOSPITAL_ADMISSION]) as decimal(19,1))					
															AS [HOSPITAL_ADMISSION_PER1M]
		,CAST(SUM((1000000 / AgeGroupDistribution.INHABITANTS) * [IC_ADMISSION])	 as decimal(19,1))			
															AS [IC_ADMISSION_PER1M]
    FROM  
        VWSINTER.RIVM_HOSPITAL_IC_ADMISSIONS_OVERTIME_BYAGEGROUP Admissions   
	LEFT JOIN
		AgeGroupDistribution ON		
		AgeGroupDistribution.AGEGROUP IS NULL
	
	WHERE
		-- Last file
        Admissions.DATE_LAST_INSERTED = (
            SELECT MAX(DATE_LAST_INSERTED) 
            FROM VWSINTER.RIVM_HOSPITAL_IC_ADMISSIONS_OVERTIME_BYAGEGROUP) AND
		
		-- Remove last empty week if empty week
		(@LastWeekEmptyAdmissions IS NULL OR [DATE_OF_STATISTICS_WEEK_START] < @LastWeekEmptyAdmissions)
	GROUP BY
		[DATE_OF_REPORT]								
		,[DATE_OF_STATISTICS_WEEK_START]				
		,DATEADD(day,7,[DATE_OF_STATISTICS_WEEK_START])	
		
END;